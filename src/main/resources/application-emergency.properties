# Emergency Profile - Minimal configuration for health checks only
# This profile allows the application to start without database connection

# Emergency mode flag
emergency.mode.enabled=true

# Server Configuration
server.port=${PORT:8080}

# Disable database and Redis auto-configuration
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration,org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration,org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration

# Logging Configuration
logging.level.org.springframework.web=INFO
logging.level.org.springframework.security=INFO
logging.level.com.teamwork.testbackapp=INFO
logging.level.org.hibernate=WARN
logging.level.org.springframework.boot.autoconfigure=WARN

# Security Configuration - Minimal
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=always

# JWT Configuration (using environment variables)
jwt.secret=${JWT_SECRET:default-secret-key-for-emergency-mode}

# CORS Configuration
cors.allowed.origins=${CORS_ALLOWED_ORIGINS:*}

# Disable unnecessary features for emergency mode
spring.jpa.open-in-view=false
spring.sql.init.mode=never